import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id 'com.android.application'
}

android {
    compileSdk 32

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 12400
        versionName "1.24"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.whenTaskAdded { task ->
//    println("哈哈哈哈哈" + task.name)
    if (task.name.contains('BuildConfig')) {
        task.doLast {
            def outdir = task.name.toLowerCase().contains("debug") ? "debug" : "release"
            def outRoot = rootProject.file("app").path + File.separator + "build" + File.separator +
                    "generated" + File.separator + "source" + File.separator +
                    "buildConfig" + File.separator + outdir + File.separator + "com"
            def fromFilePath = outRoot + File.separator + "picapico" + File.separator +
                    "scrcpyhttp" + File.separator + "BuildConfig.java"
            def intoFileDirPath = outRoot + File.separator + "genymobile" + File.separator + "scrcpy"
            def intoFilePath = intoFileDirPath + File.separator + "BuildConfig.java"

            def sourceText = new String(Files.readAllBytes(Paths.get(fromFilePath)))
                    .replaceAll("com.picapico.scrcpyhttp", "com.genymobile.scrcpy")
            File intoFileDir = new File(intoFileDirPath)
            intoFileDir.mkdirs()
            File intoFile = new File(intoFilePath)
            intoFile.createNewFile()
            def intoFileWrite = new FileWriter(intoFile)
            intoFileWrite.write(sourceText)
            intoFileWrite.close()
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
}